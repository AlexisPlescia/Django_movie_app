# Generated by Django 4.2.3 on 2023-07-29 14:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Compañía')),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Género')),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Película')),
                ('description', models.TextField(verbose_name='Sinopsis')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 'Mala'), (2, 'Mediocre'), (3, 'Buena'), (4, 'Muy Buena'), (5, 'Excelente')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='movies', verbose_name='Cover')),
                ('premiere', models.SmallIntegerField(verbose_name='Año Estreno')),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mvapp.company', verbose_name='Compañía')),
                ('genders', models.ManyToManyField(to='mvapp.gender', verbose_name='Géneros')),
            ],
        ),
    ]
